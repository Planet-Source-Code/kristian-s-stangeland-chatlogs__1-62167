VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
  Persistable = 0  'NotPersistable
  DataBindingBehavior = 0  'vbNone
  DataSourceBehavior  = 0  'vbNone
  MTSTransactionMode  = 0  'NotAnMTSObject
END
Attribute VB_Name = "clsMSNLog"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = True
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = True
Option Explicit

' Copyright (C) 2005 Kristian S. Stangeland

' This program is free software; you can redistribute it and/or
' modify it under the terms of the GNU General Public License
' as published by the Free Software Foundation; either version 2
' of the License, or (at your option) any later version.

' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.

' You should have received a copy of the GNU General Public License
' along with this program; if not, write to the Free Software
' Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

Private DOMDocument As DOMDocument

Property Get MenuCaption() As String

    ' This module dosen't require any caption
    MenuCaption = ""
    
End Property

Property Get FileFilter() As String

    ' The filter used to browse for such files
    FileFilter = "MSN Messenger (*.xml)" & Chr(0) & "*.xml"
    
End Property

Property Get FileExtension() As String

    ' The file extension this parser uses
    FileExtension = "xml"
    
End Property

Property Get ExportName() As String

    ' This parser is primary used to parse messenger plus
    ExportName = "MSN Messenger"

End Property

Property Get ExportHandleAll() As Boolean

    ' If this output modules will do all the work by itself
    ExportHandleAll = False

End Property

Property Get ExportHandleIO() As Boolean

    ' Whether or not the export-function does all the I/O-operations itself
    ExportHandleIO = False

End Property

Property Get ExportMayAppend() As Boolean

    ' Whether or not the export-function returns the ENTIRE file-content or simply just what needs to be appended
    ExportMayAppend = False

End Property

Property Get ExporterDescription() As String

    ' The description of this parser
    ExporterDescription = "Used to export to the log-type generated by MSN Messenger"

End Property

Public Function RetriveName(Session As Object, userIndex As Long) As String
    
    ' Return the second email of this session
    RetriveName = Session.Participants(userIndex).Email
    
End Function

Public Function ExportLog(Session As Object, sExistingFile As String, FileOperation As Object) As String

    On Error Resume Next
    Dim oEvent As Object, Log As Object, oPI As Object, oStylesheet As Object
    Dim Message As Object, SessionID As Long, oFrom, oTo, oText, oUser

    ' Create a new empty document
    Set DOMDocument = New DOMDocument

    ' Set properties
    DOMDocument.async = False

    ' See if the file already exists
    If Dir(sExistingFile) <> "" Then

        ' Load the XML-data
        DOMDocument.loadXML FileOperation.LoadFile(sExistingFile)
        
        ' Retrive the log-element
        Set Log = DOMDocument.getElementsByTagName("Log").Item(0)
        
        ' Get the session ID
        SessionID = Log.getAttribute("LastSessionID") + 1
        
        ' Increase the last session ID
        Log.setAttribute "LastSessionID", SessionID
                
    Else
    
        ' Add the different elements
        Set oPI = DOMDocument.createProcessingInstruction("xml", " version = " & Chr(34) & "1.0" & Chr(34))
        Set oStylesheet = DOMDocument.createProcessingInstruction("xml-stylesheet", " type='text/xsl' href='MessageLog.xsl'")
        
        ' Insert them to the document
        DOMDocument.insertBefore oStylesheet, DOMDocument.firstChild
        DOMDocument.insertBefore oPI, oStylesheet
    
        ' And create the log-element
        Set Log = DOMDocument.createElement("Log")
        
        ' Set attributes
        Log.setAttribute "FirstSessionID", 1
        Log.setAttribute "LastSessionID", 1
        
        ' Add the log-element
        DOMDocument.appendChild Log
        
        ' Set the session ID
        SessionID = 1
        
    End If
    
    ' Go through each message in the session
    For Each oEvent In Session.Events
    
        ' See if this is a message
        If oEvent.IsMessage Then
        
            ' Create a new message-element
            Set Message = DOMDocument.createElement("Message")
            
            ' Set attributes
            Message.setAttribute "Date", GetTimeOnly(oEvent.MessageDate)
            Message.setAttribute "Time", GetDateOnly(oEvent.MessageDate)
            Message.setAttribute "SessionID", SessionID
            
            ' Append the message-element
            Log.appendChild Message
            
            ' Create a from-object
            Set oFrom = DOMDocument.createElement("From")
            Set oUser = DOMDocument.createElement("User")
            
            ' Append elements
            Message.appendChild oFrom
            oFrom.appendChild oUser
        
            ' Set the user
            oUser.setAttribute "FriendlyName", oEvent.Sender.NickName
            
            ' Then create the to-object
            Set oTo = DOMDocument.createElement("To")
            Set oUser = DOMDocument.createElement("User")
            
            ' Append elements
            Message.appendChild oTo
            oTo.appendChild oUser
            
            ' Set the user
            oUser.setAttribute "FriendlyName", oEvent.Receiver(1).NickName
            
            ' And finally, create the text-element
            Set oText = DOMDocument.createElement("Text")
            
            ' Append it
            Message.appendChild oText
            
            ' Set its properties
            oText.setAttribute "Style", oEvent.Style
            
            ' And set its content
            oText.Text = oEvent.Text
            
        Else
            
            ' Create a event-element (not suppored yet)
            
        End If
    
    Next

    ' Return the documents XML
    ExportLog = DOMDocument.xml

End Function

Private Function GetTimeOnly(dDate As Date) As Date

    ' Return only the time
    GetTimeOnly = TimeSerial(Hour(dDate), Minute(dDate), Second(dDate))

End Function

Private Function GetDateOnly(dDate As Date) As Date

    ' Return only the date
    GetDateOnly = DateSerial(Year(dDate), Month(dDate), Day(dDate))

End Function



